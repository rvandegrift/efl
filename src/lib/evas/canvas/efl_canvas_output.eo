import evas_types;

class Efl.Canvas.Output (Efl.Object, Efl.Gfx.Buffer)
{
   [[Efl canvas output class]]
   methods {
      @property view {
         set {
            [[Sets the viewport region of the canvas that the output displays.

              This sets both the viewport region in the canvas that displays
              on the given output, but also the viewport size will match the 
              output resolution 1:1.]]
         }
         get {
            [[Gets the viewport region of the canvas that the output displays.]]
         }
         values {
            x: Evas.Coord; [[X coordinate viewport]]
            y: Evas.Coord; [[Y coordinate viewport]] 
            w: Evas.Coord; [[Viewport width]]
            h: Evas.Coord; [[Viewport height]]
         }
      }
      lock {
         [[Lock this output and prevent rendering any buffer associated to it.]]
         return: bool; [[$true on success, $false otherwise]]
      }
      unlock {
         [[Unlock this output and will rendering of this buffer during next call to evas_render.]]
         return: bool; [[$true on success, $false otherwise]]
      }
      @property engine_info {
         set {
            [[Sets the engine specific output parameters for a given output.]]
            return: bool; [[$true on success, $false otherwise]]
         }
         get {
            [[Gets the engine specific output parameters for a given output.]]
         }
         values {
            info: ptr(Evas.Engine_Info); [[The engine parameters.]]
         }
      }
   }
   implements {
      Efl.Object.constructor;
      Efl.Object.destructor;
      Efl.Object.parent { set; }
      Efl.Object.finalize;
   }
   events {
      pixels,ready; [[Called when pixels in output are ready to be used]]
   }
}
