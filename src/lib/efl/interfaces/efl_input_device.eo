enum Efl.Input.Device.Class
{
   [[General type of input device.

     Legacy support since 1.8.

     @since 1.18
   ]]
   none,     [[Not a device.]]
   seat,     [[The user/seat (the user themselves).]]
   keyboard, [[A regular keyboard, numberpad or attached buttons.]]
   mouse,    [[A mouse, trackball or touchpad relative motion device.]]
   touch,    [[A touchscreen with fingers or stylus.]]
   pen,      [[A special pen device.]]
   wand,     [[A laser pointer, wii-style or "minority report" pointing device.]]
   gamepad,  [[A gamepad controller or joystick.]]
}

enum Efl.Input.Device.Sub_Class
{
   [[Specific type of input device.

     Legacy support since 1.8.

     @since 1.18
   ]]
   none,        [[Not a device.]]
   finger,      [[The normal flat of your finger.]]
   fingernail,  [[A fingernail.]]
   knuckle,     [[A Knuckle.]]
   palm,        [[The palm of a users hand.]]
   hand_size,   [[The side of your hand.]]
   hand_flat,   [[The flat of your hand.]]
   pen_tip,     [[The tip of a pen.]]
   trackpad,    [[A trackpad style mouse.]]
   trackpoint,  [[A trackpoint style mouse.]]
   trackball,   [[A trackball style mouse.]]
}


/* This represents Evas_Device */
/* FIXME: no children and no Evas */

class Efl.Input.Device (Efl.Object)
{
   [[Represents a pointing device, such as a touch finger, a pen or a mouse.

     @since 1.18
   ]]
   methods {
      /* FIXME: device_class makes compilation error because of class_get() */
      @property device_type {
      	 [[Device type property]]
         values {
            klass: Efl.Input.Device.Class; [[Input device class]]
         }
      }
      @property device_subtype {
      	 [[Device subtype property]]
         values {
            klass: Efl.Input.Device.Sub_Class; [[Input device sub-class]]
         }
      }
      @property source {
      	 [[Device source property]]
         values {
            src: Efl.Input.Device; [[Input device]]
         }
      }
      @property name {
      	 [[device name property]]
         values {
            name: string; [[Input device name]]
         }
      }
      @property description {
      	 [[device description property]]
         values {
            desc: string; [[Input device description]]
         }
      }
      @property parent {
      	 [[Device parent property]]
         set {}
         get {}
         values {
            parent: Efl.Input.Device; [[Parent input device]]
         }
      }
      @property seat {
         [[Get the @Efl.Input.Device that represents a seat.

           This method will find the seat the device belongs to.

           For this, it walk through device's parents looking for a device
           with @Efl.Input.Device.Class.seat. It may be
           the device itself.

           In case no seat is found, $null is returned.
         ]]
         get {}
         values {
            seat: Efl.Input.Device; [[The seat this device belongs to.]]
         }
      }
   }
   implements {
      Efl.Object.constructor;
      Efl.Object.destructor;
   }
}
