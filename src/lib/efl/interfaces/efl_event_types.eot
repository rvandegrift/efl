/* FIXME: Do we need this? Or just use the Eo Event Description as a type? */
enum Efl.Pointer.Action
{
   [[Pointer event type.

     @since 1.18
   ]]
   none,   [[Not a valid event.]]
   move,   [[Mouse or equivalent pointer moved.]]
   down,   [[Mouse button or equivalent pointer pressed down.
             Always followed by up or cancel.]]
   up,     [[Mouse button or equivalent pointer released. See also cancel.]]
   cancel, [[Special event happening after a down if the up counterpart
             can not happen (eg. another window forcibly stole the focus).]]
   in,     [[Mouse or pointer entered the object.]]
   out,    [[Mouse or pointer exited the object.]]
   wheel,  [[Mouse wheel scroll, horizontally or vertically.]]
   axis,   [[Axis event (pen, stick, ...).]]
}

enum Efl.Pointer.Flags
{
   /* Evas.Button_Flags */
   none = 0,                [[No extra mouse button data]]
   double_click = (1 << 0), [[This mouse button press was the 2nd press of a double click]]
   triple_click = (1 << 1), [[This mouse button press was the 3rd press of a triple click]]
}

enum Efl.Event.Flags
{
   /* Evas.Event_Flags */
   none = 0,             [[No fancy flags set]]
   processed = (1 << 0), [[This event is being delivered and has been processed,
                           so it should be put "on hold" until the flag is unset.
                           The event should be used for informational purposes
                           and maybe some indications visually, but not
                           actually perform anything.]]
   scrolling = (1 << 1), [[This event flag indicates the event occurs while
                           scrolling; for example, DOWN event occurs during
                           scrolling. The event should be used for informational
                           purposes and maybe some indications visually, but not
                           actually perform anything.]]
}

enum Efl.Event.Object_Pointer_Mode {
   [[How the mouse pointer should be handled by EFL.

     In the mode $autograb, when a mouse button is pressed down over an
     object and held down, with the mouse pointer being moved outside of it,
     the pointer still behaves as being bound to that object, albeit out
     of its drawing region. When the button is released, the event will
     be fed to the object, that may check if the final position is over it
     or not and do something about it.

     In the mode $nograb, the pointer will always be bound to the object
     right below it.
   ]]
   auto_grab, [[Default, X11-like.]]
   no_grab,   [[Pointer always bound to the object right below it.]]
   no_grab_no_repeat_updown [[Useful on object with "repeat events" enabled,
                              where mouse/touch up and down events WON'T be
                              repeated to objects and these objects wont be
                              auto-grabbed.

                              @since 1.2
                            ]]
}
