import eo_base;

interface Efl.Event
{
   [[Represents a generic event data.

     Note: Most Eo Events do not carry Eo objects, rather simple data
           structures. This class is intended to carry more complex event
           data, such as pointer events.

     @since 1.18
   ]]
   legacy_prefix: null;
   methods {
      @property timestamp {
         [[The time at which an event was generated.

           If the event is generated by a server (eg. X.org or Wayland), then
           the time may be set by the server. Usually this time will be based
           on the monotonic clock, if available, but this class can not
           guarantee it.
         ]]
         set { [[Call this when generating events manually.]] }
         get {}
         values {
            ms: double; [[Time in milliseconds when the event happened.]]
         }
      }
      reset {
         [[Resets the internal data to 0 or default values.]]
      }
      dup {
         [[Creates a copy of this event.]]
         return: own(Efl.Event);
      }
      instance_get @class @protected {
         params {
            @in owner: Eo.Base;
            @out priv: void*;
         }
         return: Efl.Event;
      }
   }
}
