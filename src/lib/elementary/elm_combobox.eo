class Elm.Combobox (Elm.Button, Efl.Ui.Selectable,
                    Elm.Interface.Atspi_Widget_Action,
                    Elm.Entry, Elm.Genlist, Elm.Hover)
{
   [[Elementary combobox class]]
   legacy_prefix: elm_combobox;
   eo_prefix: elm_obj_combobox;
   event_prefix: elm_combobox;
   methods {
      @property expanded {
         get {
            [[Returns whether the combobox is expanded.

            This will return EINA_TRUE if the combobox is expanded or
            EINA_FALSE if it is not expanded.

              @since 1.17
            ]]
            return: bool; [[$true if combobox is expenaded, $false otherwise]]
         }
      }
      hover_begin {
         [[This triggers the combobox popup from code, the same as if the user
         had clicked the button.

           @since 1.17
         ]]
      }
      hover_end {
         [[This dismisses the combobox popup as if the user had clicked
         outside the hover.

           @since 1.17
         ]]
      }
   }
   implements {
      class.constructor;
      Efl.Object.constructor;
      Efl.Gfx.visible { set; }
      Efl.Gfx.size { set; }
      Efl.Canvas.Group.group_add;
      Efl.Canvas.Group.group_del;
      Elm.Widget.part_text { get; set; }
      Elm.Widget.theme_apply;
      Elm.Widget.translate;
      Elm.Widget.widget_event;
      Elm.Button.admits_autorepeat { get; }
      Elm.Genlist.filter { set; }
      Elm.Interface.Atspi_Widget_Action.elm_actions { get; }
   }
   events {
      dismissed; [[Called when combobox was dismissed]]
      expanded; [[Called when combobox was expanded]]
      clicked; [[Called when combobox was clicked]]
      item,selected; [[Called when combobox item was selected]]
      item,pressed; [[Called when combobox item was pressed]]
      filter,done; [[Called when combobox filter was done]]
   }
}
