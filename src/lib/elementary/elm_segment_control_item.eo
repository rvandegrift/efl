class Elm.Segment_Control.Item(Elm.Widget.Item)
{
   [[Elementary segment control item class]]
   legacy_prefix: elm_segment_control_item;
   eo_prefix: elm_obj_segment_control_item;
   methods {
      index_get @const {
             [[Get the index of an item.

               Index is the position of an item in segment control widget. Its
               range is from 0 to (count - 1).
               Count is the number of items, that can be get with elm_segment_control_item_count_get()]]

             return: int(-1); [[The position of item in segment control widget.]]
        }
      object_get @const {
             [[Get the real Evas(Edje) object created to implement the view of a given segment_control item.

               Base object is the @Efl.Canvas.Object that represents that item.]]
             return: Efl.Canvas.Object; [[The base Edje object associated with $it]]
        }
      selected_set {
             [[Set the selected state of an item.

               This sets the selected state of the given item $it.
               $true for selected, $false for not selected.

               If a new item is selected the previously selected will be unselected.
               Selected item can be got with function elm_segment_control_item_selected_get().

               The selected item always will be highlighted on segment control.]]

             params {
                  selected: bool; [[The selected state.]]
             }
        }
   }
   implements {
        Efl.Object.constructor;
        Efl.Object.destructor;
        Elm.Widget.Item.access_register;
        Elm.Widget.Item.part_text { get; set; }
        Elm.Widget.Item.part_content { get; set; }
   }
}
