Description: build: replace libsystemd-{daemon, journal} with libsystemd
Author: Marcel Hollerbach <marcel-hollerbach@t-online.de>
Origin: upstream
Applied-Upstream: 46e9eed2c4d7cf100959dc5b9b747335a980cebe
Reviewed-by: cedric
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/configure.ac
+++ b/configure.ac
@@ -696,24 +696,18 @@
 AC_SUBST([USER_SESSION_DIR])
 
 if test "x${have_systemd_pkg}" = "xauto" -o "x${have_systemd_pkg}" = "xyes"; then
-   PKG_CHECK_MODULES([SYSTEMD], [libsystemd-daemon >= 192 libsystemd-journal >= 192],
+   PKG_CHECK_MODULES([SYSTEMD], [libsystemd >= 209],
    [have_systemd_pkg="yes"],
    [have_systemd_pkg="no"])
 fi
 
-PKG_CHECK_MODULES(SYSTEMD_LOGIN, [libsystemd-login >= 198],
-                  [have_systemd_login=yes], [have_systemd_login=no])
-AS_IF([test "x$have_systemd_login" = "xyes"],
-      [AC_DEFINE([HAVE_SYSTEMD_LOGIN], [1], [Have systemd-login])])
-AM_CONDITIONAL(HAVE_SYSTEMD_LOGIN, test "x$have_systemd_login" = "xyes")
-
 # check for systemd library if requested
 if test "x${want_systemd}" = "xyes" -a "x${have_systemd_pkg}" = "xno"; then
    AC_MSG_ERROR([Systemd dependency requested but not found])
 fi
 
 AM_CONDITIONAL([WANT_SYSTEMD], [test "${want_systemd}" = "yes"])
-
+AM_CONDITIONAL([HAVE_SYSTEMD], [test "${want_systemd}" = "yes" -a "${have_systemd_pkg}" = "yes"])
 #### Platform-dependent
 DL_LIBS=""
 DL_INTERNAL_LIBS=""
@@ -925,7 +919,7 @@
    [test "x${want_cow_magic}" = "xyes" ],
    [1], [Turn on Eina_Magic in Eina_Cow])
 
-EFL_OPTIONAL_DEPEND_PKG([EINA], [${want_systemd}], [SYSTEMD], [libsystemd-journal])
+EFL_OPTIONAL_DEPEND_PKG([EINA], [${want_systemd}], [SYSTEMD], [libsystemd])
 
 EFL_EVAL_PKGS([EINA])
 
@@ -2357,7 +2351,7 @@
    want_g_main_loop="no"
 fi
 
-EFL_OPTIONAL_DEPEND_PKG([ECORE], [${want_systemd}], [SYSTEMD], [libsystemd-daemon])
+EFL_OPTIONAL_DEPEND_PKG([ECORE], [${want_systemd}], [SYSTEMD], [libsystemd])
 
 EFL_ADD_FEATURE([ECORE], [systemd-daemon], [${want_systemd}])
 EFL_ADD_FEATURE([ECORE], [glib])
@@ -2591,7 +2585,7 @@
    ecore_con_resolver="fork"
 fi
 
-EFL_OPTIONAL_DEPEND_PKG([ECORE_CON], [${want_systemd}], [SYSTEMD], [libsystemd-daemon])
+EFL_OPTIONAL_DEPEND_PKG([ECORE_CON], [${want_systemd}], [SYSTEMD], [libsystemd])
 
 EFL_ADD_FEATURE([ECORE_CON], [cares])
 EFL_ADD_FEATURE([ECORE_CON], [local-sockets], [${want_ecore_con_local_sockets}])
--- a/src/Makefile_Ecore_Drm.am
+++ b/src/Makefile_Ecore_Drm.am
@@ -30,8 +30,8 @@
   -DMODULE_ARCH=\"$(MODULE_ARCH)\"
 
 lib_ecore_drm_libecore_drm_la_LIBADD = @ECORE_DRM_LIBS@
-if HAVE_SYSTEMD_LOGIN
-lib_ecore_drm_libecore_drm_la_LIBADD += @SYSTEMD_LOGIN_LIBS@
+if HAVE_SYSTEMD
+lib_ecore_drm_libecore_drm_la_LIBADD += @SYSTEMD_LIBS@
 endif
 lib_ecore_drm_libecore_drm_la_DEPENDENCIES = @ECORE_DRM_INTERNAL_LIBS@
 lib_ecore_drm_libecore_drm_la_LDFLAGS = @EFL_LTLIBRARY_FLAGS@
--- a/src/lib/ecore_drm/ecore_drm_private.h
+++ b/src/lib/ecore_drm/ecore_drm_private.h
@@ -26,7 +26,7 @@
 # include <libinput.h>
 # include <xkbcommon/xkbcommon.h>
 
-# ifdef HAVE_SYSTEMD_LOGIN
+# ifdef HAVE_SYSTEMD
 #  include <systemd/sd-login.h>
 # endif
 
