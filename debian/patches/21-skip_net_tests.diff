Description: Skip tests that perform network operations
Author: Ross Vandegrift <ross@kallisti.us>
Origin: other
Forwarded: no
Last-Update: 2016-08-19
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/src/tests/ecore_con/ecore_con_test_ecore_con.c
+++ b/src/tests/ecore_con/ecore_con_test_ecore_con.c
@@ -580,7 +580,7 @@
    tcase_add_test(tc, ecore_test_ecore_con_remote_nodelay_mixed);
    tcase_add_test(tc, ecore_test_ecore_con_remote_nodelay_mixed_load_cert);
    tcase_add_test(tc, ecore_test_ecore_con_ssl_available);
-   tcase_add_test(tc, ecore_test_ecore_con_dns);
-   tcase_add_test(tc, ecore_test_ecore_con_dns_lookup);
+   /* tcase_add_test(tc, ecore_test_ecore_con_dns); */
+   /* tcase_add_test(tc, ecore_test_ecore_con_dns_lookup); */
    tcase_add_test(tc, ecore_test_ecore_con_shutdown_bef_init);
 }
--- a/src/tests/ecore_con/ecore_con_test_ecore_con_url.c
+++ b/src/tests/ecore_con/ecore_con_test_ecore_con_url.c
@@ -453,9 +453,9 @@
    tcase_add_test(tc, ecore_con_test_ecore_con_url_init);
    tcase_add_test(tc, ecore_con_test_ecore_con_url_create);
    tcase_add_test(tc, ecore_con_test_ecore_con_url_download);
-   tcase_add_test(tc, ecore_con_test_ecore_con_url_cookies_clear);
-   tcase_add_test(tc, ecore_con_test_ecore_con_url_cookies_clear_session);
-   tcase_add_test(tc, ecore_con_test_ecore_con_url_cookies_ignore_session);
+   /* tcase_add_test(tc, ecore_con_test_ecore_con_url_cookies_clear); */
+   /* tcase_add_test(tc, ecore_con_test_ecore_con_url_cookies_clear_session); */
+   /* tcase_add_test(tc, ecore_con_test_ecore_con_url_cookies_ignore_session); */
 #ifdef ECORE_CON_HTTP_TEST_URL
    tcase_add_test(tc, ecore_con_test_ecore_con_url_post);
 #endif
--- a/src/tests/eeze/eeze_test_net.c
+++ b/src/tests/eeze/eeze_test_net.c
@@ -12,6 +12,9 @@ START_TEST(eeze_test_net_list)
    int ret;
    Eina_List *list = NULL;
 
+   fprintf(stderr, "Skipping eeze_test_net_list\n");
+   return;
+
    ret = eeze_init();
    fail_if(ret != 1);
 
@@ -30,6 +33,9 @@ START_TEST(eeze_test_net_attr)
    Eeze_Net *net = NULL;
    const char *tmp = NULL;
 
+   fprintf(stderr, "Skipping eeze_test_net_attr\n");
+   return;
+
    ret = eeze_init();
    fail_if(ret != 1);
 
@@ -79,6 +85,9 @@ START_TEST(eeze_test_net_attr_ipv6)
    Eeze_Net *net = NULL;
    const char *tmp = NULL;
 
+   fprintf(stderr, "Skipping eeze_test_net_attr_ipv6\n");
+   return;
+
    ret = eeze_init();
    fail_if(ret != 1);
 
